<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwill.ilhajob.cv.mapper.CvMapper">
	<resultMap id="cvWithExpEduAwardsMap" type="com.itwill.ilhajob.cv.Cv" autoMapping="true">
		<result column="CV_SEQ" property="cvSeq"/>
		   	<!-- <association property="userSeq" javaType="com.itwill.ilhajob.user.User" autoMapping="true">
			 	<association property="expList" javaType="com.itwill.ilhajob.exp.Exp" 
							 column="exp_seq" select="com.itwill.ilhajob.exp.mapper.ExpMapper.selectByUser">
				</association>
				<association property="awardsList" javaType="com.itwill.ilhajob.awards.Awards" 
							 column="awards_seq" select="com.itwill.ilhajob.awards.mapper.AwardsMapper.selectByAwardsOfUser">
				</association>
				<association property="eduList" javaType="com.itwill.ilhajob.edu.Edu" 
							 column="edu_seq" select="com.itwill.ilhajob.edu.mapper.EduMapper.selectEduByUserSeq">
				</association>
			</association>     -->
			<collection property="expList" javaType="java.util.List" ofType="com.itwill.ilhajob.exp.Exp" autoMapping="true"></collection>
			<collection property="awardsList" javaType="java.util.List" ofType="com.itwill.ilhajob.awards.Awards" autoMapping="true" ></collection>
			<collection property="eduList" javaType="java.util.List" ofType="com.itwill.ilhajob.edu.Edu" autoMapping="true"></collection>
	</resultMap>
	<select id="selectByCvOfUserSeq" parameterType="int" resultMap="cvWithExpEduAwardsMap">
		select * from cv c left outer join experience e on c.user_seq = e.user_seq
		                   left outer join awards a on c.user_seq = a.user_seq
		                   left outer join education ed on c.user_seq = ed.user_seq
		                   where c.user_seq = #{userSeq}
	</select>
	
	<select id="selectDetailCv" parameterType="int" resultMap="cvWithExpEduAwardsMap">
		select * from cv c left outer join experience e on c.user_seq = e.user_seq
		                   left outer join awards a on c.user_seq = a.user_seq
		                   left outer join education ed on c.user_seq = ed.user_seq
		                   where c.cv_seq = #{cvSeq}
	</select>
	
    <select id="selectByCv" parameterType="int" resultMap="cvWithExpEduAwardsMap" >
       select * from cv where cv_seq = #{cvSeq}
    </select>

    <select id="selectAll" resultMap="cvWithExpEduAwardsMap">
        select * from cv
    </select>
   
    <!-- 
    <select id="selectByCvOfUserEmail" parameterType="string" resultType="com.itwill.ilhajob.cv.Cv">
        select * from cv where user_email = #{userEmail}
    </select>
	-->
	
	<!-- 회사1이 올린 공고 1에 지원한 모든 이력서 리스트 뽑아오기 
	<resultMap id="corpWithCvResultMap" 
			   type="com.itwill.ilhajob.corp.Corp"
			   autoMapping="true">
			   <result column="corp_id" property="corpId"/>
		<association property="recruit"
					 javaType="com.itwill.ilhajob.recruit.Recruit"
					 autoMapping="true">
					 <result column="rc_seq" property="reSeq"/>
		</association>
		<collection property="cvList"
					javaType="java.util.List"
					ofType="com.itwill.ilhajob.cv.Cv"
					autoMapping="true">
		</collection>
	</resultMap>
	<select id="findCvListByCorpId"
	        parameterType="java.lang.String"
	        resultMap="corpWithCvResultMap">
	    select * from app a
		join recruit r
		on a.rc_seq=r.rc_seq  
		join cv c
		on c.cv_seq=a.cv_seq
		where a.corp_id=#{corpId}
	</select>
	-->
	
	
    <insert id="insertCv" parameterType="com.itwill.ilhajob.cv.Cv">
    	<selectKey order="BEFORE" resultType="int" keyProperty="cvSeq">
			select cv_cv_seq_seq.nextVal from dual
		</selectKey>
        insert into cv (cv_seq, cv_name, cv_description, cv_portfolio, user_seq)
        VALUES (#{cvSeq}, #{cvName}, #{cvDescription}, #{cvPortfolio}, #{userSeq})
    </insert>

    <update id="updateCv" parameterType="com.itwill.ilhajob.cv.Cv">
        update cv
        set cv_name = #{cvName}, cv_description = #{cvDescription}, cv_portfolio = #{cvPortfolio}
        where cv_seq = #{cvSeq}
    </update>

    <delete id="deleteCv" parameterType="int">
        delete from cv where cv_seq = #{cvSeq}
    </delete>

</mapper>